openapi: 3.0.0
info:
  title: User API
  description: Description of the User API
  version: 1.1.1
servers:
  - url: https://anypoint.mulesoft.com/accounts/api/
    description: Anypoint Cloudhub
  - url: https://eu1.anypoint.mulesoft.com/accounts/api/
    description: Anypoint Cloudhub EU
  - url: https://gov.anypoint.mulesoft.com/accounts/api/
    description: Anypoint Cloudhub GOV

security:
  - bearerAuth: []

paths:
  /organizations/{orgId}/users:
    parameters:
      - name: orgId
        in: path
        description: The ID of the organization in GUID format
        required: true
        schema:
          type: string
    get:
      operationId: listUsers
      description: Returns the group of users that belong to the specified organization.
      parameters:
        - name: type
          in: query
          description: A search string to specify the type of user you want to retrieve.
          required: false
          schema:
            type: string
            enum: [host, proxy, all]
        - name: limit
          in: query
          description: Maximum number of users to retrieve per request.
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          description: The number of records to omit from the response.
          required: false
          schema:
            type: integer
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '200':    # status code
          $ref: '#/components/responses/SuccessListUsers'
    post:
      operationId: createUser
      description: Creates a User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userPostBody'
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '201':
          $ref: '#/components/responses/SuccessPostUser'

  /organizations/{orgId}/users/{userId}:
    parameters:
      - name: orgId
        in: path
        description: The ID of the organization in GUID format
        required: true
        schema:
          type: string
      - name: userId
        in: path
        description: the ID of the user
        required: true
        schema:
          type: string
    get:
      operationId: getUser
      description: Returns a specific user that belong to the specified organization.
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '200':    # status code
          $ref: '#/components/responses/SuccessGetUser'
    put:
      operationId: updateUser
      description: Update a user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userPutBody'
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '204':
          $ref: '#/components/responses/SuccessPutUser'
    delete:
      operationId: deleteUser
      description: Delete the user
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '204':
          $ref: '#/components/responses/SuccessDeleteUser'

components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT

  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
    BadRequestError:
      description: Bad request response
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                title: the response status code
                default: 400
              message:
                type: string
                title: the error message
                example: A sample message here
    SuccessPostUser:
      description: Success response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/user'
    SuccessPutUser:
      description: Success response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/user"
    SuccessDeleteUser:
      description: Success response
    SuccessListUsers:
      description: Success response
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                title: List of users
                items:
                  $ref: '#/components/schemas/user'
              total:
                type: integer
                title: Total number of results
    SuccessGetUser:
      description: Success response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/user'

  schemas:
    userPostBody:
      type: object
      title: userPostBody
      properties:
        username:
          type: string
          title: username
        firstName:
          type: string
          title: firstName
        lastName:
          type: string
          title: lastName
        email:
          type: string
          title: email
        phoneNumber:
          type: string
          title: phoneNumber
        password:
          type: string
          title: password
    userPutBody:
      type: object
      title: userPutBody
      properties:
        username:
          type: string
          title: username
        firstName:
          type: string
          title: firstName
        lastName:
          type: string
          title: lastName
        email:
          type: string
          title: email
        phoneNumber:
          type: string
          title: phoneNumber
        password:
          type: string
          title: password
        properties:
          type: object
          title: properties
    user:
      title: user
      allOf:
        - type: object
          title: userId
          required:
            - id
          properties:
            id:
              description: The user Id
              title: id
              type: string
              example: '4b353f44-6486-42ae-ae77-18b4032f9643'
        - $ref: "#/components/schemas/userCore"
    userCore:
      title: userCore
      type: object
      properties:
        username:
          type: string
          title: username
          example: "UzerMule.test"
        firstName:
          type: string
          title: firstName
          example: "Uzer"
        lastName:
          type: string
          title: lastName
          default: "Mule"
        phoneNumber:
          type: string
          title: phoneNumber
          example: "111-111-1111"
        email:
          type: string
          title: email
          example: "api.platform.qa+uzer@gmail.com"
        organizationId:
          type: string
          title: organizationId
          example: "xxxxxx-213d-4f60-845c-207286484cd1"
        enabled:
          type: boolean
          title: enabled
          example: true
        deleted:
          type: boolean
          title: deleted
          example: false
        lastLogin:
          type: string
          title: lastLogin
          example: "2021-07-12T09:28:43.569Z"
        mfaVerificationExcluded:
          type: boolean
          title: mfaVerificationExcluded
          example: false
        mfaVerifiersConfigured:
          type: string
          title: mfaVerifiersConfigured
          example: "false"
        idprovider_id:
          type: string
          title: idproviderId
          example: "mulesoft"
        createdAt:
          type: string
          title: createdAt
          example: "Mon Feb 09 2015 17:47:26 GMT-0300 (ART)"
        updatedAt:
          type: string
          title: updatedAt
          example: "Mon Feb 09 2015 17:47:26 GMT-0300 (ART)"
        isFederated:
          type: boolean
          title: isFederated
          example: false
        type:
          type: string
          title: type
        organization:
          $ref: "#/components/schemas/organization"
        memberOfOrganizations:
          $ref: "#/components/schemas/memberOfOrganizations"
        contributorOfOrganizations:
          $ref: "#/components/schemas/contributorOfOrganizations"
        properties:
          type: object
          title: properties
          properties:
            cs_auth:
              type: object
              title: cs_auth
        organizationPreferences:
          type: object
          title: organizationPreferences
        primaryOrganization:
          type: object
          title: primaryOrganization
          properties:
            id:
              type: string
              title: id
            name:
              type: string
              title: name

    organization:
      title: organization
      type: object
      properties:
        name:
          type: string
          title: name
        id:
          type: string
          title: id
        createdAt:
          type: string
          title: createdAt
        updatedAt:
          type: string
          title: updatedAt
        ownerId:
          type: string
          title: ownerId
        clientId:
          type: string
          title: clientId
        idprovider_id:
          type: string
          title: idprovider_id
        isFederated:
          type: boolean
          title: isFederated
        parentOrganizationIds:
          type: array
          title: parentOrganizationIds
          items:
            type: string
        subOrganizationIds:
          type: array
          title: subOrganizationIds
          items:
            type: string
        tenantOrganizationIds:
          type: array
          title: tenantOrganizationIds
          items:
            type: string
        mfaRequired:
          type: string
          title: mfaRequired
        isAutomaticAdminPromotionExempt:
          type: boolean
          title: isAutomaticAdminPromotionExempt
        domain:
          type: string
          title: domain
        isMaster:
          type: boolean
          title: isMaster
        subscription:
          type: object
          title: subscription
          properties:
            category:
              type: string
              title: category
            type:
              type: string
              title: type
            expiration:
              type: string
              title: expiration
        properties:
          type: object
          title: properties
        entitlements:
          type: object
          title: entitlements

    memberOfOrganizations:
      type: array
      title: memberOfOrganizations
      items:
        $ref: "#/components/schemas/org"

    contributorOfOrganizations:
      type: array
      title: contributorOfOrganizations
      items:
        $ref: "#/components/schemas/org"

    org:
      type: object
      title: org
      properties:
        parentName:
          type: string
          nullable: true
          title: parentName
        parentId:
          type: string
          nullable: true
          title: parentId
        domain:
          type: string
          title: domain
        name:
          type: string
          title: name
        id:
          type: string
          title: id
        createdAt:
          type: string
          title: createdAt
        updatedAt:
          type: string
          title: updatedAt
        ownerId:
          type: string
          title: ownerId
        clientId:
          type: string
          title: clientId
        idprovider_id:
          type: string
          title: idprovider_id
        isFederated:
          type: boolean
          title: isFederated
        parentOrganizationIds:
          type: array
          title: parentOrganizationIds
          items:
            type: string
        subOrganizationIds:
          type: array
          title: subOrganizationIds
          items:
            type: string
        tenantOrganizationIds:
          type: array
          title: tenantOrganizationIds
          items:
            type: string
        mfaRequired:
          type: string
          title: mfaRequired
        isAutomaticAdminPromotionExempt:
          type: boolean
          title: isAutomaticAdminPromotionExempt
        isMaster:
          type: boolean
          title: isMaster
        subscription:
          type: object
          title: subscription
          properties:
            category:
              type: string
              title: category
            type:
              type: string
              title: type
            expiration:
              type: string
              title: expiration

